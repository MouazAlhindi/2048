import java.util.*;

public class InitialLogic
{
   private static String[][] board;
   private static int score, highscore;
   
   private static String w = "";
	
	/*private static String[][] board={
													{"2","4","4","2"},
													{"2","2","2","2"},
													{"'","2","2","2"},
													{"2","2","2","'"}
												 };
   
   
   public static String userInput()
   {
      Scanner kb = new Scanner(System.in);
      System.out.println("enter move");
      w = kb.nextLine();
      kb.close();
      return w;
   }
      */
      
   
   public static String getDigit()
   {
      String[] g = new String[8];
      for (int i = 0; i <= 6; i++)
      { 
         g[i] = "2";
      }
            
      g[7] = "4";
      
      return g[(int)(Math.random()*8)];
   }
   
   public static int randomDigit()
   {
      return (int)(Math.random()*4);
   }
   
   public static void setBoard()
   {
      board = new String[4][4];
      int r1, r2, r3, r4;
      r1 = 0; r2 = r1;
   
      r1 = randomDigit();
      r2 = randomDigit();
		
		for (int i = 0; i < 4; i++)
      {
         for (int j = 0; j < 4; j++)
         {
            board[i][j] = "'";
         }
      }
      
      board[r1][r2] = getDigit();  
      
      r3 = r1; r4 = r2;  
      
      while (r3 == r1 && r4 == r2) 
      {
         r3 = randomDigit();
         r4 = randomDigit();
         
         board[r3][r4] = getDigit();
      }
   }
   
   public static void addNum()
   {
      int x = randomDigit();
      int y = randomDigit();
      
      while (board[x][y] != "'")
      {
         x = randomDigit();
         y = randomDigit();
      }
      
      board[x][y] = getDigit();
   }	
   
   public static void makeMove(String a)
   {
      
      toRight(a);
      toUp(a);
      toLeft(a);
      toDown(a);
   }
   
   public static void moveUp()
   {
      for (int i = 1; i <= 3; i++)
      {
         for (int j = 0; j <= 3; j++)
         {
    		   if (board[i][j] != "'")
				{                     
               if (board[i-1][j] == "'")
					{
				      board[i-1][j] = board[i][j];
						board[i][j] = "'";
				   }	    
            }
         }
      }
   }
    
    public static void toUp(String a)
    {
      if (a.equals("w"))
      {
         moveUp();
         {
            for (int i = 1; i < 4; i++)
      	   {
         	   for (int j = 3; j >= 0; j--)
         	   {
                  if (board[i][j] != "'")
                  {
                     if (board[i][j].equals(board[i-1][j]))
                     {
                        int k = Integer.parseInt(board[i][j]);
                        k = k*2;
                        String ans = Integer.toString(k);
                        board[i-1][j] = ans;
                        board[i][j] = "'";
                        score += k;
                     }
                  }
                  moveUp();
               }
            } 
	      } 
         addNum();
      }
   }

      
   public static void moveLeft()
   {
      for (int i = 0; i <= 3; i++)
      {
         for (int j = 3; j >= 1; j--)
         {
            if (board[i][j] != "'")
            {                     
               if (board[i][j-1] == "'")
               {
                  board[i][j-1] = board[i][j];
                  board[i][j] = "'";
               }       
            }
         }
      }
  }

   public static void toLeft(String a)
   {
      if (a.equals("a"))
      {
         moveLeft();
         {
            for (int i = 0; i < 4; i++)
            {
               for (int j = 3; j >= 1; j--)
               {
                  if (board[i][j] != "'")
                  {
                     if (board[i][j].equals(board[i][j-1]))
                     {
                        int k = Integer.parseInt(board[i][j]);
                        k = k*2;
                        String ans = Integer.toString(k);
                        board[i][j-1] = ans;
                        board[i][j] = "'";
                        score += k;
                     }
                  }
                  moveLeft();
               }
            } 
         } 
         addNum();
      }
   }      
   
   public static void moveRight()
	{
   
	   for (int i = 0; i < 4; i++)
      {
         for (int j = 2; j >= 0; j--)
         {
    		   if (board[i][j] != "'")
			   {                     
               if (board[i][j+1] == "'")
				   {
		   	      board[i][j+1] = board[i][j];
						board[i][j] = "'";
               }	                     		  	        					
         	}
      	}
		}		
	}
   
   public static void toRight(String a)
   {
      if (a.equals("d"))
      {
         moveRight();
         {
            for (int i = 0; i < 4; i++)
      	   {
         	   for (int j = 3; j > 0; j--)
         	   {
                  if (board[i][j] != "'")
                  {
                     if (board[i][j].equals(board[i][j-1]))
                     {
                        int k = Integer.parseInt(board[i][j]);
                        k = k*2;
                        String ans = Integer.toString(k);
                        board[i][j] = ans;
                        board[i][j-1] = "'";
                        score += k;
                     }
                  }
                  moveRight();
               }
            } 
	      } 
         addNum();
      }
   }
   
   
   public static void moveDown()
   {
      for (int i = 0; i < 3; i++)
      {
            for (int j = 0; j <= 3; j++)
            {
               if (board[i][j] != "'")
               {                     
                  if (board[i+1][j] == "'")
                  {
                     board[i+1][j] = board[i][j];
                     board[i][j] = "'";
                  }       
               }
            }
      }
   }

   public static void toDown(String a)
   {
      if (a.equals("s"))
      {
         moveDown();
         {
            for (int i = 0; i < 3; i++)
            {
               for (int j = 0; j <= 3; j++)
               {
                  if (board[i][j] != "'")
                  {
                     if (board[i][j].equals(board[i+1][j]))
                     {
                        int k = Integer.parseInt(board[i][j]);
                        k = k*2;
                        String ans = Integer.toString(k);
                        board[i+1][j] = ans;
                        board[i][j] = "'";
                        score += k;
                     }
                  }
                  moveDown();
               }
            } 
         } 
         addNum();
      }
   }

   public static void printArr(String[][] board)
   {
		for (int i = 0; i < 4; i++)
      {
         for (int j = 0; j < 4; j++)
         {
            System.out.print("  " + board[i][j] + "  ");
         }
         System.out.println();
      }
	}    
   public static void main(String[] args)
   {  
      System.out.println("welcome to RyAn & DyLaN's version of 2048\n\n" +
                         "enter 'w' to move up\n" +
                         "enter 'd' to move right\n" +
                         "enter 's' to move down\n" + 
                         "enter 'a' to move\n" +
                         "enter 'r' to restart\n" +
                         "& enter 'q' to end\n");
                         
      System.out.println("enjoy!\n");
      
      setBoard();
      
      printArr(board);
      
      Scanner kb = new Scanner(System.in);
                       
      String input = "";
      
      while (input.equals("q") == false)
      {
	      System.out.println("enter move");
         input = kb.nextLine();
         
         if (input.equals("r") == true)
         { 
            if (score > highscore)
            {
               highscore = score;  
            } 
            System.out.println("final score: " + score);
            System.out.println("highscore: " + highscore);
            score = 0;
            
            setBoard();
         }
        
         if (input.equals("q") == true)
         {
            if (score > highscore)
            {
               highscore = score;  
            } 
            System.out.println("thanks for playing!");
            System.out.println("final score: " + score);
            System.out.println("highscore: " + highscore);
            break;
         }

         makeMove(input);
         
         System.out.println();
      
		   printArr(board);
      }
   }
     
}  
